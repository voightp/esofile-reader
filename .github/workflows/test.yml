name: Tests

on:
  # Trigger the workflow on push or pull request,
  # but only for the master branch
  push:
    branches:
      - master
    path-ignore:
      - 'scripts/**'
  pull_request:
    branches:
      - master
    path-ignore:
      - 'scripts/**'

defaults:
  run:
    shell: bash

jobs:
  linting:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Lint with flake8
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  tests:
    needs: linting
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
        os: [ubuntu-latest, macOS-latest, windows-latest]

    steps:
      - uses: actions/checkout@v1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Poetry
        run: |
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python
          echo "::set-env name=PATH::$HOME/.poetry/bin:$PATH"

      - name: Configure poetry
        run: poetry config virtualenvs.in-project true

      - name: Install dependencies
        run: poetry install

      - name: Test with unittest
        run: poetry run python -m unittest discover -s ./tests -t ./tests -p test_*.py


        
